datasets:
  # Получаем список систем с линками на карточку системы
  swamp.dataset.systems_list:
    source: >
      (
        $manifest := $;
        $systems := $manifest.components.$sift(function ($v) { $v.entity = "system"});
        $dictionaries := $manifest."sweaf.ia.dictionaries";
        $functions := $manifest.functions;
        $accounts := $dictionaries."accounts".parameters;
        $technologies := $manifest.technologies.items;
        $tactical_units := $manifest."sweaf.ba.tactical_units";
        $units := $tactical_units.$sift(function ($v) { $v.type = "bu" });

        [$systems.$spread().(
          
          $system_id := $keys()[0];
          $bu_id := $split($system_id, ".", 2) ~> $join('.');
          $systems_parameters := $eval($functions.get_systems_parameters, {'system_id': $system_id,'components': $systems, 'dictionaries': $dictionaries, 'tactical_units': $tactical_units});
          $tactical_unit := $systems_parameters.tactical_unit;
          $.*.(
            {
              "id": $system_id,
              "link_to_system": "/architect/components/" & $system_id,
              "title": title,
              "entity": entity,
              "guid": guid,
              "dev_model": dev_model,
              "critical_level": critical_level,
              "system_status": system_status,
              "short_description": short_description,
              "description": description,
              "system_entities": "Ссылка",
              "link_to_system_entities": "/entities/sweaf.ia.business_entities/business_entities_table_in_systems.filtered?system_id=" & $system_id,
              "deployment_card": "Ссылка",
              "link_to_deployment_card": "/entities/sweaf.ta.environments/deployment_card?id=" & $system_id,
              "application_owner": $eval($functions.get_account,{"username": $systems_parameters.application_owner, "accounts": $accounts}).title,
              "business_owners": $systems_parameters.business_owners.([$eval($functions.get_account,{"username": $, "accounts": $accounts}).title]),
              "architect": $eval($functions.get_account,{"username": $systems_parameters.architect, "accounts": $accounts}).title,
              "budget_holder": $eval($functions.get_account,{"username": $systems_parameters.budget_holder, "accounts": $accounts}).title,
              "budget_holders_bu": $lookup($units, $eval($functions.get_account,{"username": $systems_parameters.budget_holder, "accounts": $accounts}).bu).title,
              "owner_unit":  $bu_id ? $lookup($units, $bu_id).title : $bu_id,
              "tactical_unit":  $tactical_unit,
              "prod_url": $distinct(urls[id = "prod"].url),
              "technologies": $map(technologies, function($tech, $i, $a){
                  $filter($technologies.$spread(), function($v, $i, $a) {
                      $tech in $v.*.aliases
                  }).(
                      $keys()[0]
                  )
              })
            }
          );
        )]^(id)
      )


  swamp.dataset.repositories:
    source: >
      (
        $systems := $merge($.components.$spread().(
          $_id := $keys()[0];
          $.*[repositories].(
            $title := title;
            repositories.({
              $: {"id": $_id, "title": $title}
            })
          );
        ));

        repositories.$spread().(
          $_id := $keys()[0];
          $repositories := $.*.(
            $system := $lookup($systems, $_id);
            $ ~> | $ | {"id": $_id, "system_title": $system.title, "link_to_system": $system.id ? "/architect/components/" & $system.id} |;
          );
        )
      )

  swamp.dataset.technologies_list:
    source: >
      (
        $ALL := $distinct($.components.*.technologies);

        $GOOD := $.technologies.items.*.aliases;

        $BAD_RESULT := $ALL[$not($ in $GOOD)].(
            {"title": $, "link": "", "section": "", "status": "Не определён", "aliases": ""}
        );

        $GOOD_RESULT := $.technologies.(
          $SECTIONS := $.sections;
          $.items.$spread().(
            $_id := $keys()[0];
            $.*.(
              {"title": $_id, "link": $.link, "section": $lookup($SECTIONS, $.section).title, "status": $.status, "aliases": $join($.aliases, ", ")}
            )
          );
        );
        $append($GOOD_RESULT, $BAD_RESULT);
      )

