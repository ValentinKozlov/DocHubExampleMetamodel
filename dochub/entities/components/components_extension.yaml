entities:
  components:
    # Расширяем презентацию сущности
    presentations:
      # Встраиваемся в основную перезентацию (т.е. она уже существует)
      blank:
        # Добавляем собственный виджет
        widgets:
          sys_responsible_employees: # Идентификатор виджета
            # Название виджета
            title: Ключевые контакты
            # Идентификатор презентации, которая будет использоваться в виджете
            presentation: sys_responsible_employees
            # В params можно передать дополнительные параметры
            # презентации, которые будут доступны в перемнной $params
            #params:
            #  param1: Значение параметра 1
            #  param2: Значение параметра 2
            # Расположение
            # < - слева
            # > - справа
            # = - Растянуть на 100%
            align: "<"
            order: 1000
            style:
              border: false
              margin: 4px
          sys_health_indicators:
            # title: Индикаторы здоровья
            presentation: sys_health_indicators
            align: ">"
            order: 1000
            style:
              border: false
              margin: 4px
          aerolite:
            title: Аэродром
            presentation: aerolite
            align: "="
            order: 3000
            style:
              border: false
              margin: 4px
          sys_repositories:
            title: Репозитории
            presentation: sys_repositories
            align: "<"
            order: 1000
            style:
              border: false
              margin: 4px
          sys_technologies:
            title: Технологии
            presentation: sys_technologies
            align: "<"
            order: 1000
            style:
              border: false
              margin: 4px
          sys_urls:
            title: Полезные ссылки
            presentation: sys_urls
            align: "<"
            order: 1000
            style:
              border: false
              margin: 4px
          sys_docs:
            title: Документация системы
            presentation: sys_docs
            align: "<"
            order: 1000
            style:
              border: false
              margin: 4px
          sys_problems:
            title: Проблемы
            presentation: sys_problems
            align: "<"
            order: 1000
            style:
              border: false
              margin: 4px
          outside_links:
            title: Кто зависит от этого компонента
            presentation: outside_links
            align: ">"
            order: 1000
            style:
              border: false
              margin: 4px
          feedback_widget:
            title: Опросники
            presentation: feedback_widget
            align: ">"
            order: 1000
            style:
              border: false
              margin: 4px

      sys_responsible_employees: # Идентификатор представления
        # Контракт по параметрам представления в формате JSONSchema
        params:
          type: object
          properties:
            component:
              title: Идентификатор компонента
              type: string
          required:
            - component
        # Тип документа шаблона
        type: table
        # Определяем заголовок таблицы
        headers:
          - value: title             # Идентификатор зависимого компонента
            text: Должность   # Заголовок колонки
            sortable: true        # Производить сортировку по колонке
            align: left           # Форматирование по горизонтали
            width: 30%            # Ширина колонки
          - value: scrum          # Наименование зависимого компонента
            text: SCRUM
            sortable: true
            align: left           # Форматирование по горизонтали
            width: 20%
          - value: res_persons          # Наименование зависимого компонента
            text: ФИО
            sortable: true
            align: left           # Форматирование по горизонтали
            width: 40%
            link: acc_link
          - value: acc_persons          # Наименование зависимого компонента
            text: Логин
            sortable: true
            align: left           # Форматирование по горизонтали
            width: 40%
        source: >
          (
            $system_id := $params.component;
            $manifest := $;        
            $dictionaries := $manifest."sweaf.ia.dictionaries";
            $functions := $manifest.functions;
            $accounts := $dictionaries."accounts".parameters;
            $systems := $manifest.components;
            
            $sys_pattern := $eval("/^" &  $system_id & "$/");
            $system := $systems.$sift(function($v, $k) {$k ~> $sys_pattern});
            
            $contacts := $dictionaries."settings.contacts".parameters.(
              $name := name;
              $contact_account_names := $spread($system.*).$sift(function ($v, $k) { $k = $name }).*;
              {
                "title": title,
                "scrum_title": scrum_title,
                "is_optional": is_optional,
                "order_index": order_index,
                "account_names": [$contact_account_names]
              };
            )[$not(is_optional) or $count(account_names) > 0];

            $sort($contacts, function ($l, $r) { $l.order_index > $r.order_index }).(
              $contact_settings := $;
              account_names.(
                $account := $eval($functions.get_account,{"username": $, "accounts": $accounts});
                {
                  "title": $contact_settings.title,
                  "scrum": $contact_settings.scrum_title,
                  "res_persons": $account.title,
                  "acc_persons": $account.name,
                  "acc_link": $account.acc_link
                } 
              )
            );
          )

      sys_urls:
        params:
          type: object
          properties:
            component:
              title: Идентификатор компонента
              type: string
          required:
            - component
        type: table
        headers:
          - value: type
            text: Тип ссылки
            sortable: true
            align: left
            width: 10%

          - value: title
            text: Имя
            sortable: true
            align: left
            width: 40%
            link: url
        source: >
          (
            $system_id := $params.component;            
            $field_id := $params.field_id;
            $field_id := "urls";
            $_manifest := $;
            $_systems := $_manifest.components;
            $sys_pattern := $eval("/^" &  $system_id & "$/");
            $sys_accounts := [$_systems.$sift(function($v, $k) {$k ~> $sys_pattern}).*.(
              $.urls
            )];
          )

      sys_docs:
        params:
          type: object
          properties:
            component:
              title: Идентификатор компонента
              type: string
          required:
            - component
        type: table
        headers:
          - value: description
            text: Описание документа
            sortable: true
            align: left
            width: 100%
            link: link_to_doc

        source: >
          (
            $system_id := $params.component;            
            [docs.$spread().(
              $link := "/docs/" & $keys()[0];
              $system_id in *.subjects ?
              [$[$system_id in *.subjects]
                {                
                    "description": *.description,
                    "link_to_doc": $link
                }] : undefined;
            )];
          )

      sys_repositories: # Идентификатор представления
        # Контракт по параметрам представления в формате JSONSchema
        params:
          type: object
          properties:
            component:
              title: Идентификатор компонента
              type: string
          required:
            - component
        # Тип документа шаблона
        type: table
        # Определяем заголовок таблицы
        headers:
          - value: gitlab_id
            text: ID
            align: left
            width: 10%
          - value: name
            text: Название
            link: url
          - value: full_path
            text: Полный путь
          - value: default_branch
            text: Ветка по умолчанию
        source: >
          (
            $system_id := $params.component;
            $components := $.components;

            $all_repositories := $.repositories;
            $get_repo := function($repo_id) {
                $lookup($all_repositories, $repo_id).({
                    "url": url,
                    "full_path": full_path,
                    "name": name,
                    "default_branch": default_branch,
                    "gitlab_id": gitlab_id
                })        
            };
            $sys_pattern := $eval("/^" & $system_id & "$/");
            $comp_pattern := $eval("/^" & $system_id & "\\.[a-zA-Z0-9\\_]*$/");
            [$distinct($components.$sift(function($v, $k) {$k ~> $sys_pattern or $k ~> $comp_pattern}).$spread().(
              $.*.(            
                $.repository ? $get_repo($.repository)     
              )
            ))];  
          )

      sys_technologies:
        # Контракт по параметрам представления в формате JSONSchema
        params:
          type: object
          properties:
            component:
              title: Идентификатор компонента
              type: string
          required:
            - component
        # Тип документа шаблона
        type: table
        # Определяем заголовок таблицы
        headers:
          - value: title
            text: Технология
            sortable: true
            align: left
            width: 30%
            link: link

          - value: section
            text: Секция
            sortable: true
            align: left
            width: 20%

          - value: status
            text: Статус
            sortable: false
            align: left
            width: 10%

          - value: aliases
            text: Алиасы
            sortable: true
            align: left
            width: 40%
        source: >
          (
            $system_id := $params.component;            
            $system_tech := $lookup($.components, $system_id).technologies;
            $all_tech := $.technologies.(
              $sections := $.sections;
              $.items.$spread().(
                $_id := $keys()[0];
                $.*.(
                  $TECH := $ ~> | $ | {"title": $_id, "aliases": $join($.aliases, ", ")} |;
                  $.aliases.(
                    {$: $TECH}
                  )
                )
              );
            );

            $system_tech .(
              $system_technologies := $;
              $lookup($all_tech, $system_technologies) ? $lookup($all_tech, $system_technologies) : {"title": $system_technologies, "link": "", "section": "", "status": "Не определён", "aliases": ""}
            );

          )
      aerolite:
        type: aerolite
        params:
          type: object
          properties:
            component:
              title: Идентификатор компонента
              type: string
          required:
            - component
        source: >
          (
            $id := $lookup($.components, $params.component).guid
          )
      sys_health_indicators: # Идентификатор представления
        # Контракт по параметрам представления в формате JSONSchema
        params:
          type: object
          properties:
            component:
              title: Идентификатор компонента
              type: string
          required:
            - component
        # Тип документа шаблона
        type: rating
        source: >
          (
            $system_id := $params.component;            
            $indicators := $."sweaf.ia.dictionaries"."system_health.indicators".parameters;
            $fitness := $."sweaf.ia.dictionaries"."system_health.fitness".parameters;
            $ratings := $."sweaf.ia.dictionaries"."system_health.ratings".parameters;

            $system := $lookup($.components, $system_id);
            $system_indicators := $eval($.functions.get_system_indicators, {'system': $system, 'dictionaries': $."sweaf.ia.dictionaries"});

            ($system_indicators) ? (
              $rate := $eval($.functions.get_indicators_total_rating, {'indicators': $system_indicators, 'dictionaries': $."sweaf.ia.dictionaries"});
              {
                  'rating': $rate,
                  'indicators': $system_indicators.(
                    $indicator_id := $.id;
                    $indicator_fit := $.fit;
                    {
                        'title': $indicators[name=$indicator_id].title,
                        'description': $indicators[name=$indicator_id].description,
                        'fit': $fitness[name=$indicator_fit].title,
                        'comment': comment
                    }
                  )
              }
            );
          )

      sys_problems:
        params:
          type: object
          properties:
            component:
              title: Идентификатор компонента
              type: string
          required:
            - component
        # Тип документа шаблона
        type: table
        # Определяем заголовок таблицы
        headers:
          - value: correction
            text: Что нужно исправить
          - value: description
            text: Описание
        source: >
          (            
            $system_id := $params.component;
            $matcher := $eval("/^.*" & $system_id & "$/");
            $manifest := $;
            $problems := (
              $.rules.validators.$spread().(
                $self := $.*;
                $eval($.*.source, $manifest);
              )
            )[$matcher(location)]
          )

      outside_links: # Идентификатор представления
        # Контракт по параметрам представления в формате JSONSchema
        params:
          type: object
          properties:
            component:
              title: Идентификатор компонента
              type: string
          required:
            - component
        # Тип документа шаблона
        type: table
        # Определяем заголовок таблицы
        headers:
          - value: id             # Идентификатор зависимого компонента
            text: Идентификатор   # Заголовок колокнки
            sortable: true        # Производить сортировку по колонке
            align: left           # Форматирование по горизонтали
            width: 40%            # Ширина колонки
            link: link
          - value: title          # Наименование зависимого компонента
            text: Наименование
            sortable: true
            align: left           # Форматирование по горизонтали
            width: 40%
            link: link
          - value: direction      # Направление связи
            text: Направление связи
            sortable: true
            align: center
            width: 20%
        # Данные для шаблона
        source: >
          (
            [$distinct(components.$spread().(
              $id := $keys()[0];
              $title := *.title;
              $links := $distinct($.*.links[id=$params.component].("" & direction));
              $links.{
                "id": $id,
                "title": $title,
                "direction": $links,
                "link": "/architect/components/" & $id
              }
            ))^(id)]
          )

      services:
        type: upload
        title: Бизнес ИТ услуги
        source: >
          (
            $manifest := $;
            $systems := $manifest.components;
            $dictionaries := $manifest."sweaf.ia.dictionaries";
            $functions := $manifest.functions;
            $accounts := $dictionaries."accounts".parameters;
            $tactical_units := $manifest.tactical_units;
            $units := $sift($.components, function($v) { $v.entity = "unit" });

            [$systems.$spread().(
              $system_id := $keys()[0];
              $bu_id := $split($system_id, ".", 2) ~> $join('.');          
              $systems_parameters := $eval($functions.get_systems_parameters, {'system_id': $system_id,'components': $systems, 'dictionaries': $dictionaries, 'tactical_units': $tactical_units});
              $bu_block := $systems_parameters.tactical_unit;
              $.*.(
                {
                  "entity": entity,
                  "id": $system_id,
                  "guid": guid,
                  "title": title,
                  "description": description,
                  "short_description": short_description,
                  "system_status": $filter($statuses, function ($v) { $v.name = system_status }).guid,
                  "critical_level": $filter($criticaity, function ($v) { $v.name = critical_level }).guid,
                  "budget_holder": $eval($functions.get_account,{"username": $systems_parameters.budget_holder, "accounts": $accounts}).title,
                  "application_owner": $eval($functions.get_account,{"username": $systems_parameters.application_owner, "accounts": $accounts}).title,
                  "business_owners": $systems_parameters.business_owners.([$eval($functions.get_account,{"username": $, "accounts": $accounts}).title]),
                  "unit": $lookup($units, $bu_id).guid
                }
              )[entity="system"][guid];
            )]^(id)
          )

      units:
        type: upload
        title: Бизнес-юниты
        source: >
          (
            $.components.$sift(function($v) { $v.entity = "unit" }).*.(
              {
                "guid": guid,
                "title": title
              }
            );
          )
      feedback_widget:
        type: feedback_widget
        title: Опросники
        params:
          type: object
          properties:
            component:
              title: Идентификатор компонента
              type: string
          required:
            - component
        source: >
          (
            $lookup($.components, $params.component)
          )